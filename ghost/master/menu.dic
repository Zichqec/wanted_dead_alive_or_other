OnMouseDoubleClick
{
	if reference5 == 0 && reference3 == 0; OnSakuraMenu //Left clicking sakura
}

//Because there is an all modifier here, you don't need to write -- between menu options
OnSakuraMenu : all
{
	OnSurfaceRestore
	"\b[2]\![set,autoscroll,disable]\_q\![no-autopause]"
	
	"\![*]\q[Dialogue,OnAiTalk]  "
	switch LastTalk == "" //Uses top option if there is a dialogue to repeat
	{
		"\![*]\q[Repeat,OnLastTalk]"
		"\![*]\f[color,disable]Repeat\f[color,default]"
	}
	
	"\n\n"
	"\n"
	
	"\![*]\__q[OnAskQuestions]Ask questions\__q\n\n"
	
	"\![*]\__q[OnNextCandidate,accept]Accept candidate\__q  \![*]\__q[OnNextCandidate,reject]Reject candidate\__q\n\n"
	"\n"
	
	switch ARRAYSIZE(SavedResponses) == 0
	{
		"\![*]\__q[OnSeeOldResponses]Review prior answers\__q\n\n"
		"\f[color,disable]\![*]Review prior answers\f[color,default]\n\n"
	}
	
	"\![*]\__q[OnViewStats]View stats\__q\n\n"
	"\n"
	
	"\![*]\q[Change talk rate,OnTalkRateMenu]\n\n"
	
	//if SHIORI3FW.DebugMode; "\f[color,disable]\![*]\__q[OnDebug.SeeAllResponses]See all answers\__q\n\n\f[color,default]"
	if SHIORI3FW.DebugMode; "\f[color,disable]\![*]\__q[OnDebug.SwitchTo]Switch to...\__q\n\n\f[color,default]"
	
	"\n"
	"\![*]\q[Cancel,blank]"	
}

OnLastTalk
{
	LastTalk
}

OnAskQuestions : all
{
	
	"\0\b[2]\_q\![set,autoscroll,disable]\f[anchorvisitedfontcolor,default.anchor]\![no-autopause]"
	
	_questions = QuestionsText
	_questionnum = 0 //NOT the same as _i
	for _i = 0; _i < ARRAYSIZE(_questions); _i++
	{
		if ASEARCH(_i,QuestionsToAsk) == -1; continue
		_questionnum++
		switch CandidateResponse[_i][0,C_BYTE1] == "N/A"
		{
			"\f[color,disable]\f[strike,1]\__q[OnAskQuestion,%(_i)]%(_questionnum). %(_questions[_i])\__q\f[strike,default]\f[color,default]"
			"\_a[OnAskQuestion,%(_i)]%(_questionnum). %(_questions[_i])\_a"
		}
		"\n\n"
	}
	"\n\n"
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Done,blank]"
}

OnAskQuestion : all
{
	_num = TOINT(reference0)
	
	_response = CandidateResponse[_num][1,C_BYTE1]
	
	CandidateResponse[_num] = SHIORI3FW.RemoveAllTags(_response) + C_BYTE1 + _response //Put it back in the array, minus tags for the first one
	
	"\0"
	_response
	"\n\n\_q"
	"\![*]\q[Ask another,OnAskQuestions]  \![*]\q[Done,blank]"
}

OnNextCandidate : all
{
	"\t"
	if reference0 == "accept"
	{
		Candidate.Status = 1
		AcceptedCandidatesTotal++
		AcceptedCandidatesToday++
		
		EVAL("Accepted.%(CurrentShell)")
	}
	else
	{
		Candidate.Status = 0
		RejectedCandidatesTotal++
		RejectedCandidatesToday++
		EVAL("Rejected.%(CurrentShell)")
	}
	SaveResponses
	
	"\_w[1000]"
	FadeOut
	"\_w[1000]"
	"\![embed,OnGenerateNewCharacter]"
}

OnSeeOldResponses : all
{
	if reference0 == ""; reference0 = ARRAYSIZE(SavedResponses) - 1 //Last page by default
	
	"\C\![lock,balloonrepaint]\c"
	"\0\b[2]\_q\![set,autoscroll,disable]\![no-autopause]"
	
	_response = SavedResponses[reference0]
	_response = SPLIT(_response,CHR(0xFDEF))
	_candidateinfo = SPLIT(_response[0],C_BYTE1)
	_answers = SPLIT(_response[1],C_BYTE1)
	
	_candidatenum = _candidateinfo[0] //Saving the number sort of became redundant now that I'm saving them all, but... whatever
	_candidatestatus = _candidateinfo[1]
	_candidateshell = _candidateinfo[2]
	_candidatevariant = _candidateinfo[3]
	
	_statusdisplay = "[VANISHED]"
	if _candidatestatus == 0; _statusdisplay = "[REJECTED]"
	elseif _candidatestatus == 1; _statusdisplay = "[ACCEPTED]"
	elseif _candidatestatus == 2; _statusdisplay = "[MICHAEL]" //???
	
	_c = "\f[color,disable]\f[italic,1]"
	_d = "\f[italic,default]\f[color,default]"
	
	"\f[align,center]\f[height,+2]\f[bold,1]Candidate #%(_candidatenum)\f[bold,default]\f[height,default]\n %(_statusdisplay) \n\f[align,left]"
	
	switch reference0 <= 0
	{
		"\__q[OnSeeOldResponses,%(reference0 - 1)]<< Previous\__q"
		"\f[color,disable]<< Previous\f[color,default]"
	}
	"\n[0]\f[align,right]"
	switch reference0 >= ARRAYSIZE(SavedResponses) - 1
	{
		"\__q[OnSeeOldResponses,%(reference0 + 1)]Next >>\__q"
		"\f[color,disable]Next >>\f[color,default]"
	}
	"\n\f[align,left]\n"
	
	_questions = QuestionsText
	for _i = 0; _i < ARRAYSIZE(_questions); _i++
	{
		if ASEARCH(_i,QuestionsToAsk) == -1; continue
		
		"\![*]%(_questions[_i])\n"
		
		if _candidateshell == "fluffydemon" && _candidatevariant == "2"
		{
			"%(_c)%(DecodeMorse(_answers[_i]))%(_d)\n\n"
		}
		else; "%(_c)%(_answers[_i])%(_d)\n\n"
	}
	"\n"
	"\![*]\__q[OnSakuraMenu]Back\__q  \![*]\__q[blank]Done\__q"
	"\![unlock,balloonrepaint]"
}

OnViewStats : all
{
	"\0\b[2]\_q\![set,autoscroll,disable]\![no-autopause]"
	
	"\f[align,center]\f[height,+2]\f[bold,1]Current experiment\f[bold,default]\f[height,default]\n\f[align,left]\n"
	
	"Candidates accepted: %(AcceptedCandidatesToday)\n"
	"Candidates rejected: %(RejectedCandidatesToday)\n"
	"\n\n"
	
	"\f[align,center]\f[height,+2]\f[bold,1]Previous experiment\f[bold,default]\f[height,default]\n\f[align,left]\n"
	
	"Candidates accepted: %(AcceptedCandidatesLast)\n"
	"Candidates rejected: %(RejectedCandidatesLast)\n"
	"\n"
	_resultnum = LastExperimentResult
	_result = "\f[bold,1]Inconclusive\f[bold,default] %(emdash) No experiment could be performed due to no candidates being accepted."
	if _resultnum == 1; _result = "\f[bold,1]Inconclusive\f[bold,default] %(emdash) Insufficient sample size for accurate results."
	if _resultnum == 2; _result = "\f[bold,1]Failure\f[bold,default] %(emdash) Candidates were completely unfiltered, and unsuitable for their purpose."
	if _resultnum == 3; _result = "\f[bold,1]Failure\f[bold,default] %(emdash) Candidates were not well vetted, and some were unsuitable for their purpose."
	if _resultnum == 4; _result = "\f[bold,1]Success\f[bold,default] %(emdash) Many candidates were fit for purpose. Results could be improved with better filtering, so that candidates which become problematic can be removed without reducing the sample size too much."
	if _resultnum == 5; _result = "\f[bold,1]Success\f[bold,default] %(emdash) Most candidates were fit for purpose, and candidates which became problematic were easily removed while maintaining a good sample size."
	
	"Result: %(_result)"
	"\n\n"
	
	"\f[align,center]\f[height,+2]\f[bold,1]All experiments\f[bold,default]\f[height,default]\n\f[align,left]\n"
	
	"Candidates accepted: %(AcceptedCandidatesTotal)\n"
	"Candidates rejected: %(RejectedCandidatesTotal)\n"
	"\n"
	
	_successes = ExperimentResults[4] + ExperimentResults[5]
	_failures =  ExperimentResults[2]
	_inconclusives = ExperimentResults[0] + ExperimentResults[1] + ExperimentResults[3]
	"Successful experiments: %(_successes)\n"
	"Inconclusive experiments: %(_inconclusives)\n"
	"Failed experiments: %(_failures)\n"
	"\n\n"
	
	"\![*]\__q[OnSakuraMenu]Back\__q  \![*]\__q[blank]Done\__q"
}

OnTalkRateMenu : all
{	
	//This is just setting up a label, you may need to add to it or tweak it if you change what rates are available
	_talkrate = "Off"
	if aitalkinterval == 30; _talkrate = "30 seconds"
	elseif aitalkinterval == 60; _talkrate = "1 minute"
	elseif aitalkinterval == 180; _talkrate = "3 minutes"
	elseif aitalkinterval == 300; _talkrate = "5 minutes"
	elseif aitalkinterval == 600; _talkrate = "10 minutes"
	
	"\0\b[2]\![set,autoscroll,disable]\![no-autopause]\_q"
	"Current interval: %(_talkrate)\n\n"
	
	"\![*]\q[Off,OnTalkRateChange,0]\n"
	"\![*]\q[30 seconds,OnTalkRateChange,30]\n"
	"\![*]\q[1 minute,OnTalkRateChange,60]\n"
	"\![*]\q[3 minutes,OnTalkRateChange,180]\n"
	"\![*]\q[5 minutes,OnTalkRateChange,300]\n"
	"\![*]\q[10 minutes,OnTalkRateChange,600]\n"
	"\n"
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Cancel,blank]"
}

OnTalkRateChange
{
	aitalkinterval = TOINT(reference0)
}

/*

PLOTTING SPACE

Okay so... I think to start I need to rig up these questions and make it generate responses per character... no worry about shell changes yet. Just something where I can click to see it gen new stuff

Next up... make it so that there is a menu choice for accept/reject, and when that is done, dump the answers into a 2d array and gen a new character

Next I need to make questions askable...

I still need to make questions be picked from a pool each day

I also need to make it so that it tracks which ones have been asked or not....... oopsie whoopsie, we might be going 3d with this array! Or maybe I just fill with N/A if no response yet...

Once all of the above is complete, THEN i start poking at shells...

Shells now generate questions based on which shell you're on

//Next is to generate a character, and to have it pick a shell when generating.
	//Maybe pick a shell first, switch, then generate the details? Kind of a latch dealio, but...

//Then, I need to add checks to force you to that shell no matter what...

//At some point I need to put in testing for fluffydemon to be in different modes...

//Need to make shell changes do the following:
	//Maintain chosen balloon
	//Move new shell to coords of old shell

//Also to do:
	//Random dressups picked when change shells (if latch tripped)

//Set up dialogue draw (1/4)




DAY 2 PRIORITIES

//Need to set up the boot and firstboot sequence, and perhaps also rough out a close sequence


Experiment success criteria (may change later but just to get it started):

- Must accept at least 5 candidates, otherwise insufficient data
- Must reject at least 1 candidate and ask at least 1 question, otherwise a complete disaster due to just letting everyone in
- Must reject at least a third of candidates, otherwise bad outcome due to unfit subjects
- Must ask at least half of the questions, otherwise bad/neutral outcome due to unfit subjects
- Rejecting candidates without asking questions means you're throwing out good ones, accepting candidates without asking questions means you're letting in bad ones... they count towards your "good" total if you ask at least 4ish questions, maybe 5

Ways experiment can go wrong:
- Just let everyone in
- Not choosy enough
- Didn't bring in enough candidates

Ways it can go right:
- Decent sample size, decent being picky with it
- Excellent sample size, doing good at being picky


mneeeeh... so i want _two_ metrics... amount accepted vs amount rejected, and number of questions asked
either i have to count the questions asked on the ones that are rejected, or i need to save them... that's where this is falling apart right now, i do not have that data and i need to decide how to save it
*/



OnDebug.SwitchTo : all
{
	"\0\b[2]\![set,autoscroll,disable]\![no-autopause]\_q"
	
	"\![*]\__q[OnDebug.SwitchToShell,bluemesh]bluemesh\__q\n"
	"\![*]\__q[OnDebug.SwitchToShell,suke]suke\__q\n"
	"\![*]\__q[OnDebug.SwitchToShell,fluffydemon,0]fluffydemon (normal)\__q\n"
	"\![*]\__q[OnDebug.SwitchToShell,fluffydemon,1]fluffydemon (mouth)\__q\n"
	"\![*]\__q[OnDebug.SwitchToShell,fluffydemon,2]fluffydemon (eye)\__q\n"
	"\![*]\__q[OnDebug.SwitchToShell,weissvern]weissvern\__q\n"
	"\![*]\__q[OnDebug.SwitchToShell,goldfish]goldfish\__q\n"
	"\![*]\__q[OnDebug.SwitchToShell,vampire]vampire\__q\n"
	"\![*]\__q[OnDebug.SwitchToShell,antlers]antlers\__q\n"
	"\![*]\__q[OnDebug.SwitchToShell,michael]michael\__q\n"
	
	"\n\n"
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Cancel,blank]"
}

OnDebug.SwitchToShell : all
{
	if reference0 == "fluffydemon"; Candidate.Variant = TOINT(reference1)
	
	Candidate.Num-- //Counteract the increase...
	Candidate.Shell = reference0
	NewCharacterLatch = 1
	FadeOut
	"\![change,shell,%(Candidate.Shell),--option=raise-event]"
}