OnFirstBoot : all
{
	LastTalk = ""
	SavedResponses = IARRAY
	PreviousResponses = IARRAY
	GenerateQuestions
	//GenerateAnswers
	NewCharacterLatch = 0
	BootingLatch = 0
	AcceptedCandidatesTotal = 0
	AcceptedCandidatesToday = 0
	AcceptedCandidatesLast = 0
	RejectedCandidatesTotal = 0
	RejectedCandidatesToday = 0
	RejectedCandidatesLast = 0
	Candidate.Variant = 0
	Candidate.Num = 0
	Candidate.Status = -1 //-1 undetermined, 0 rejected, 1 accepted, 2 michael??
	RecentShells = IARRAY
	LastExperimentResult = 0
	ExperimentResults = (0,0,0,0,0,0)
	
	"\1\s[-1]\0\s[0]\t"
	
	"It's interview time, nerds.\x"
	"Gonna interview SO many people. It'll be great.\x"
	
	FadeOut
	OnGenerateNewCharacter
}

BootDialogue
{
	"\_qLast experiment: %(ExperimentSuccessLabel(LastExperimentResult))"
}

OnInitialize
{
	if !ISVAR("SavedResponses"); SavedResponses = IARRAY //TODO i should probably just reset this here, but... maybe for our ease of use I'll put it in OnBoot
	if !ISVAR("Candidate.Num"); Candidate.Num = 0
	if !ISVAR("ExperimentResults"); ExperimentResults = (0,0,0,0,0,0)
	
	if reference0 != "reload" //Reset EXCEPT when just reloading
	{
		LastTalk = ""
		AcceptedCandidatesToday = 0
		RejectedCandidatesToday = 0
		RecentShells = IARRAY
	}
}

GenerateQuestions
{
	QuestionsToAsk = (0,1,2,3,24) //Always present questions
	QuestionsText = Questions
	
	while ARRAYSIZE(QuestionsToAsk) < 10
	{
		_pick = RAND(25)
		if ASEARCH(_pick,QuestionsToAsk) == -1; QuestionsToAsk ,= _pick
	}
	QuestionsToAsk = ASORT("int,ascending",QuestionsToAsk)
}

OnBoot
{
	//Only save the last state if anything happened, otherwise assume it was a mistake
	if ARRAYSIZE(SavedResponses) > 0
	{
		PreviousResponses = SavedResponses
		LastExperimentResult = CalculateExperimentSuccess
		ExperimentResults[LastExperimentResult]++
	}
	SavedResponses = IARRAY
	Candidate.Num = 0
	GenerateQuestions
	
	BootingLatch = 1
	
	"\1\s[-1]\0\s[-1]\t\![change,shell,master,--option=raise-event]"
}

OnClose
{
	"\0\![set,serikotalk,false]"
	--
	"That seems like enough...\n\n "
	--
	"\![embed,OnCloseFade]" //so that \t doesn't take effect until here, so you can cancel
	--
	"Time to close up and start doing Scienceâ„¢."
	--
	"\w8\w8\-"
}

OnCloseFade : all
{
	"\t"
	FadeOut
}